<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>testing-base</artifactId>
        <groupId>com.peregrine.testing</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>testing.setup</artifactId>
    <packaging>content-package</packaging>

    <name>Testing Setup</name>
    <description>
        This sets up the Sling Test Server
    </description>

    <properties>
        <IT.expected.bundles.count>125</IT.expected.bundles.count>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.21</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.junit.core</artifactId>
            <version>1.0.14</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.testing.rules</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.junit.teleporter</artifactId>
            <version>1.0.6</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock-junit4</artifactId>
            <version>2.8.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.21</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <!-- define the resources that will go into the package -->
            <resource>
                <!--
                    we want to keep some of the META-INF files and not configure
                    everything in the plugin.
                -->
                <directory>${basedir}/src/main/content/META-INF</directory>
                <targetPath>../vault-work/META-INF</targetPath>
            </resource>
            <resource>
                <!--
                    we want to keep some of the META-INF files and not configure
                    everything in the plugin.
                -->
                <directory>${basedir}/../../docs</directory>
                <targetPath>apps/admin/docs</targetPath>
            </resource>
            <resource>
                <directory>${basedir}/src/main/content/jcr_root</directory>
                <excludes>
                    <!-- exclude .vlt control files in the package -->
                    <exclude>**/.vlt</exclude>
                    <exclude>**/.vltignore</exclude>
                    <exclude>**/.gitignore</exclude>
                    <exclude>**/*.iml</exclude>
                    <exclude>**/.classpath</exclude>
                    <exclude>**/.project</exclude>
                    <exclude>**/.settings</exclude>
                    <exclude>**/.DS_Store</exclude>
                    <exclude>**/target/**</exclude>
                    <exclude>**/pom.xml</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <!-- Find free ports to run our server -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>reserve-server-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <portNames>
                                <!-- used port name must be stored in property because it must be used for the base url -->
                                <portName>http.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- the Sling instance is provisioned from the model in src/main/provisioning/model.txt -->
                <groupId>org.apache.sling</groupId>
                <artifactId>slingstart-maven-plugin</artifactId>
                <version>1.7.6</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>prepare-launchpad-package</id>
                        <goals>
                            <goal>prepare-package</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>build-launchpad-package</id>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>start-container-before-IT</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-container-after-IT</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <!-- Let the Test Server run to manually verify the setup. TODO: remove later -->
                            <shouldBlockUntilKeyIsPressed>true</shouldBlockUntilKeyIsPressed>
                        </configuration>
                    </execution>


                </executions>
                <configuration>
                    <servers>
                        <server>
                            <id>singleinstance</id>
                            <port>${http.port}</port>
                            <vmOpts>${sling.vm.options}</vmOpts>
                        </server>
                    </servers>
                    <!--<keepLaunchpadRunning>true</keepLaunchpadRunning>-->
                </configuration>
            </plugin>

            <!-- Make sure that the server has all bundles deployed in order to make WCMIO content plugin deploy successfully -->
            <!--<plugin>-->
                <!--<artifactId>maven-failsafe-plugin</artifactId>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<goals>-->
                            <!--<goal>integration-test</goal>-->
                            <!--<goal>verify</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->
                    <!--<systemPropertyVariables>-->
                        <!--<launchpad.http.port>${http.port}</launchpad.http.port>-->
                        <!--<IT.expected.bundles.count>${IT.expected.bundles.count}</IT.expected.bundles.count>-->
                    <!--</systemPropertyVariables>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <launchpad.http.port>${http.port}</launchpad.http.port>
                        <IT.expected.bundles.count>${IT.expected.bundles.count}</IT.expected.bundles.count>

                        <launchpad.http.server.url>http://${sling.host}:${http.port}</launchpad.http.server.url>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>io.wcm.maven.plugins</groupId>
                <artifactId>wcmio-content-package-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <serviceURL>http://${sling.host}:${http.port}/bin/cpm/package.service.html</serviceURL>
                    <userId>${sling.user}</userId>
                    <password>${sling.password}</password>
                    <failOnMissingEmbed>true</failOnMissingEmbed>
                    <!--<group>com.peregrine.admin</group>-->
                </configuration>
                <executions>
                    <execution>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>install</goal>
                        </goals>
                        <configuration>
                            <packageFiles>
                                <packageFile>
                                    <groupId>com.peregrine.nodetypes</groupId>
                                    <artifactId>nodetypes.ui.apps</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                </packageFile>
                                <packageFile>
                                    <groupId>com.peregrine.felib</groupId>
                                    <artifactId>felib.ui.apps</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                </packageFile>
                                <packageFile>
                                    <groupId>com.peregrine.pagerender</groupId>
                                    <artifactId>pagerender.ui.apps</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                </packageFile>
                                <packageFile>
                                    <groupId>com.peregrine.admin</groupId>
                                    <artifactId>admin-base.ui.materialize</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                </packageFile>
                                <packageFile>
                                    <groupId>com.peregrine.admin</groupId>
                                    <artifactId>admin-base.ui.apps</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                </packageFile>
                                <packageFile>
                                    <groupId>com.example.site</groupId>
                                    <artifactId>example.ui.apps</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                </packageFile>
                            </packageFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <configuration>
                    <licenseName>peregrine-cms-license</licenseName>
                    <licenseResolver>${project.baseUri}../../src/license</licenseResolver>
                    <excludes>
                        <!-- Need to provide a pattern that deals with folders as well -->
                        <exclude>**/api/swaggereditor/**/*</exclude>
                        <exclude>**/*.svg</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!--<profile>-->
            <!--<id>autoInstallPackage</id>-->
            <!--<build>-->
                <!--<plugins>-->
                    <!--<plugin>-->
                        <!--<groupId>io.wcm.maven.plugins</groupId>-->
                        <!--<artifactId>wcmio-content-package-maven-plugin</artifactId>-->
                        <!--<extensions>true</extensions>-->
                        <!--<configuration>-->
                            <!--<group>com.peregrine.admin</group>-->
                        <!--</configuration>-->
                        <!--<executions>-->
                            <!--<execution>-->
                                <!--<id>install-package</id>-->
                                <!--<goals>-->
                                    <!--<goal>install</goal>-->
                                <!--</goals>-->
                            <!--</execution>-->
                        <!--</executions>-->
                    <!--</plugin>-->
                <!--</plugins>-->
            <!--</build>-->
        <!--</profile>-->
    </profiles>
</project>
